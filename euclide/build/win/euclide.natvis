<?xml version="1.0" encoding="utf-8"?>
<AutoVisualizer xmlns="http://schemas.microsoft.com/vstudio/debugger/natvis/2010">

  <Type Name="boost::logic::tribool">
    <DisplayString Condition="value==indeterminate_value">unknown</DisplayString>
    <DisplayString Condition="value==false_value">false</DisplayString>
    <DisplayString Condition="value==true_value">true</DisplayString>
  </Type>

  <Type Name="Euclide::BitSet&lt;enum Euclide::Square,64&gt;">
    <DisplayString Condition="_bits==0xFFFFFFFFFFFFFFFF">Anywhere</DisplayString>
    <DisplayString Condition="_bits==0x0000000000000000">Nowhere</DisplayString>
    <DisplayString>{_bits,x}</DisplayString>
    <Expand>
      <CustomListItems>
        <Variable Name="bit" InitialValue="0"/>
        <Loop>
          <If Condition="_bits >> bit &amp; 1">
            <Item>(Square)(bit)</Item>
          </If>
          <Exec>bit++</Exec>
          <Break Condition="bit >= 64"/>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="Euclide::BitSet&lt;enum Euclide::Glyph,13&gt;">
    <DisplayString Condition="_bits==0x00001FFF">Any</DisplayString>
    <DisplayString Condition="_bits==0x00000000">None</DisplayString>
    <DisplayString>{_bits,x}</DisplayString>
    <Expand>
      <CustomListItems>
        <Variable Name="bit" InitialValue="0"/>
        <Loop>
          <If Condition="_bits >> bit &amp; 1">
            <Item>(Glyph)(bit)</Item>
          </If>
          <Exec>bit++</Exec>
          <Break Condition="bit >= 13"/>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="Euclide::BitSet&lt;int,32&gt;" >
    <DisplayString Condition="_bits==0xFFFF">Any</DisplayString>
    <DisplayString Condition="_bits==0">None</DisplayString>
    <DisplayString>{_bits,x}</DisplayString>
    <Expand>
      <CustomListItems>
        <Variable Name="bit" InitialValue="0"/>
        <Loop>
          <If Condition="_bits >> bit &amp; 1">
            <Item Condition="bit==0">"King (0)",sb</Item>
            <Item Condition="bit==1">"Queen (1)",sb</Item>
            <Item Condition="bit==2">"K-Rook (2)",sb</Item>
            <Item Condition="bit==3">"Q-Rook (3)",sb</Item>
            <Item Condition="bit==4">"K-Bishop (4)",sb</Item>
            <Item Condition="bit==5">"Q-Bishop (5)",sb</Item>
            <Item Condition="bit==6">"K-Knight (6)",sb</Item>
            <Item Condition="bit==7">"Q-Knight (7)",sb</Item>
            <Item Condition="bit==8">"A-Pawn (8)",sb</Item>
            <Item Condition="bit==9">"B-Pawn (9)",sb</Item>
            <Item Condition="bit==10">"C-Pawn (10)",sb</Item>
            <Item Condition="bit==11">"D-Pawn (11)",sb</Item>
            <Item Condition="bit==12">"E-Pawn (12)",sb</Item>
            <Item Condition="bit==13">"F-Pawn (13)",sb</Item>
            <Item Condition="bit==14">"G-Pawn (14)",sb</Item>
            <Item Condition="bit==15">"H-Pawn (15)",sb</Item>
            <Item Condition="bit>=16">bit</Item>
          </If>
          <Exec>bit++</Exec>
          <Break Condition="bit >= 32"/>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

  <Type Name="Euclide::BitSet&lt;*,*&gt;" >
    <DisplayString Condition="_bits==($T1)(-1)">Any</DisplayString>
    <DisplayString Condition="_bits==($T1)(0)">None</DisplayString>
    <DisplayString>{_bits,x}</DisplayString>
    <Expand>
      <CustomListItems>
        <Variable Name="bit" InitialValue="0"/>
        <Loop>
          <If Condition="_bits >> bit &amp; 1">
            <Item>($T1)(bit)</Item>
          </If>
          <Exec>bit++</Exec>
          <Break Condition="bit >= $T2"/>
        </Loop>
      </CustomListItems>
    </Expand>
  </Type>

</AutoVisualizer>